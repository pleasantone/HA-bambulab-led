# source_url: https://gist.github.com/dreed47/b33a76472cc813f7bf48a63c3dde7dce
alias: Bambu Lab External Light Controller
description: Control additional lights based on printer status
mode: restart

blueprint:
  name: Bambu Lab External Light Controller
  description: Control one or more lights based upon BambuLab X1C/P1S 3D printer
  domain: automation
  input:
    online:
      name: Online
      description: Select the printer online state binary sensor.
      selector:
        entity:
          filter:
            - domain:
                - binary_sensor
              integration: bambu_lab
          multiple: false
    print_status:
      name: Print Status
      description: Select the print_status entity.
      selector:
        entity:
          filter:
            - domain:
                - sensor
              integration: bambu_lab
          multiple: false
    current_stage:
      name: Current Stage
      description: Select the printer current_stage entity.
      selector:
        entity:
          filter:
            - domain:
                - sensor
              integration: bambu_lab
          multiple: false
    chamber_light:
      name: Internal Chamber Light
      description: Select the printer chamber_light entity
      selector:
        entity:
          filter:
            - domain:
                - light
              integration: bambu_lab
          multiple: false
    target_lights:
      name: Switched External Lights
      description: Select the lights you wish to control.
      selector:
        entity:
          filter:
            - domain:
                - light
          multiple: true

triggers:
  - alias: Trigger whenever printer stage, status, chamber light, or online state changes
    trigger: state
    entity_id:
      - !input online
      - !input print_status
      - !input current_stage
      - !input chamber_light

action:
  - alias: "set variables"
    variables:
      chamber_light: !input chamber_light
  #  - delay: "00:00:05"
  - choose:
      - alias: Printer is offline, check again in 15secs and if so, turn lights off
        conditions:
          condition: state
          entity_id: !input online
          state: "off"
        sequence:
          - delay: "00:00:15"
          - if:
              - alias: Printer offline after 15 seconds
                condition: state
                entity_id: !input online
                state: "off"
                for: "00:00:10"
            then:
              - alias: Turn LED lights off, ignore chamber light
                action: light.turn_off
                target:
                  entity_id: !input target_lights
      - alias: LIDAR is on, turn off chamber light
        conditions:
          condition: state
          entity_id: !input current_stage
          state:
            - scanning_bed_surface
            - cleaning_nozzle_tip
            - calibrating_extrusion
        sequence:
          action: light.turn_off
          target:
            entity_id: !input target_lights
      - alias: Printer needs attention, lights on
        # Originally red-blink (255,0,0,0,Blink)
        conditions:
          condition: state
          entity_id: !input current_stage
          state:
            - m400_pause
            - paused_chamber_temperature_control_error
            - paused_cutter_error
            - paused_filament_runout
            - paused_first_layer_error
            - paused_front_cover_failing
            - paused_heat_bed_temperature_malfunction
            - paused_low_fan_speed_heat_break
            - paused_nozzle_clog
            - paused_nozzle_filament_covered_detected
            - paused_nozzle_temperature_malfunction
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input target_lights
      - alias: Printer idle, lights follow chamber light
        # Originally fuscia-oscillate (255,0,195,200,Oscillate)
        conditions:
          condition: state
          entity_id: !input print_status
          state:
            - idle
        sequence:
          - action: light.{{ (states(chamber_light) == 'on') | iif('turn_on', 'turn_off') }}
            target:
              entity_id: !input target_lights
      - alias: Print finished, lights follow chamber light
        # Originally green-solid (0,255,0,255,Solid)
        conditions:
          condition: state
          entity_id: !input print_status
          state:
            - finish
        sequence:
          - action: light.{{ (states(chamber_light) == 'on') | iif('turn_on', 'turn_off') }}
            target:
              entity_id: !input target_lights
      - alias: Printing or AMS loading/unloading, lights follow chamber light
        # Originally white-solid (255,255,255,255,Solid)
        conditions:
          condition: state
          entity_id: !input current_stage
          state:
            - printing
            - filament_unloading
            - filament_loading
        sequence:
          - action: light.{{ (states(chamber_light) == 'on') | iif('turn_on', 'turn_off') }}
            target:
              entity_id: !input target_lights
      - alias: Printing paused, lights on, ignore chamber light
        # Originally green-blink (0,255,0,255,Blink)
        conditions:
          condition: state
          entity_id: !input print_status
          state: pause
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input target_lights
      - alias: Automatic Bed Leveling, lights follow chamber light
        # Originally blue-blink (0,0,255,255,Blink)
        conditions:
          condition: state
          entity_id: !input current_stage
          state:
            - auto_bed_leveling
        sequence:
          - action: light.{{ (states(chamber_light) == 'on') | iif('turn_on', 'turn_off') }}
            target:
              entity_id: !input target_lights
      - alias: Bed preheating, lights follow chamber light
        # Originally yellow-blink (255,169,0,255,Blink)
        conditions:
          condition: state
          entity_id: !input current_stage
          state:
            - heatbed_preheating
            - heating_hotend
        sequence:
          - action: light.{{ (states(chamber_light) == 'on') | iif('turn_on', 'turn_off') }}
            target:
              entity_id: !input target_lights
